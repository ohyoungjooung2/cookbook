#!/bin/sh
#
# redis start redis key value cache server
#
# chkconfig: 2345 81 29
# description:  redis is an open source, BSD licensed, advanced key-value cache and store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets, sorted sets, bitmaps and hyperloglogs.
# processname: redis
# pidfile: <%= node[:redis][:pid_file] %>
# config: /etc/redis/redis.conf
# based on init script of redis source(most recent stable 2014.0811.

### BEGIN INIT INFO
# Provides: redis advanced key-value cache and store server
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start, stop and restart redis server
# Description: redis is an open source, BSD licensed, advanced key-value cache and store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets, sorted sets, bitmaps and hyperloglogs.
### END INIT INFO

# Source function library
. /etc/rc.d/init.d/functions



REDISPORT=<%= node[:redis][:port] %>
EXEC=/usr/local/bin/redis-server
CLIEXEC=/usr/local/bin/redis-cli
PIDFILE=<%= node[:redis][:pid_file]%>
CONF=<%= node[:redis][:con_file]%>
USER=<%= node[:redis][:user] %>

start(){
      if [ -f $PIDFILE ]
      then
          echo "$PIDFILE exists, process is already running or crashed"
      else
          echo "Starting Redis server..."
          exec sudo -u $USER sh -c "$EXEC $CONF 2>&1 >> <%= node[:redis][:log_file]%>"
      fi
}

stop(){
      if [ ! -f $PIDFILE ]
      then
          echo "$PIDFILE does not exist, process is not running"
      else
          PID=$(cat $PIDFILE)
          echo "Stopping..."
          $CLIEXEC -p $REDISPORT shutdown
          while [ -x /proc/${PID} ]
          do
             echo "Waiting for Redis to shutdown..."
             sleep 1
          done
          echo "Redis stopped"
       fi
      }


case "$1" in

  start)
        start
        ;;

      
  stop)
        stop
        ;;

  restart)
        stop; start;
        ;; 
   *)
   echo "Usage: $0 {start|stop|restart}"
       exit 1
       ;;
esac
